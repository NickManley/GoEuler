package euler

/**
* Project Euler #2 :
* 
* Each new term in the Fibonacci sequence is generated by adding
* the previous two terms. By starting with 1 and 2, the first 
* 10 terms will be:
* 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
* By considering the terms in the Fibonacci sequence whose values
* do not exceed four million, find the sum of the even-valued terms.
*/


func Euler2() int {
	total := 0
	fibs := fibonacci(4000000)
	for _, fib := range fibs {
		if fib % 2 == 0 {
			total += fib
		}
	}
	return total
}

/**
* Returns a list of the fibonacci sequence
* with all values less than the limit.
*/
func fibonacci(limit int) []int {
	fib := []int{1,2}
	for true {
		nextFib := fib[len(fib)-2] + fib[len(fib)-1]
		if nextFib < limit {
			fib = append(fib, nextFib)
		} else {
			break
		}	
	}
	return fib
}
